name: Build, Push to ACR, and Deploy to Container App

on:
  push:
    branches: 
      - 'main' 
    paths-ignore:
      - 'README.md'
  
jobs:  
  build-and-push-and-deploy:  
    name: 'Build, Push Docker Image, and Deploy' 
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Docker login to Azure Container Registry
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 3: Build Docker Image and Tag with Git SHA
      - name: Build Docker Image
        run: |
          IMAGE_TAG=${{ secrets.ACR_LOGIN_SERVER }}/my-image-name:${{ github.sha }}
          docker build \
            --build-arg BOT_TOKEN=${{ secrets.BOT_TOKEN }} \
            --build-arg GROQ_API_KEY=${{ secrets.GROQ_API_KEY }} \
            -t $IMAGE_TAG .

      # Step 4: Push Docker Image to ACR
      - name: Push Docker Image
        run: |
          IMAGE_TAG=${{ secrets.ACR_LOGIN_SERVER }}/my-image-name:${{ github.sha }}
          docker push $IMAGE_TAG

      # Step 5: Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 6: Deploy to Azure Container App
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          acrName: DiegoWellness # Replace with your Azure Container Registry name (without .azurecr.io)
          containerAppName: diegowellnessbot # Replace with your Container App name
          resourceGroup: DiegoWellnessBot # Replace with your resource group
          imageToDeploy: ${{ secrets.ACR_LOGIN_SERVER }}/my-image-name:${{ github.sha }} # Image built in previous steps
