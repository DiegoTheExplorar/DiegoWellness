name: Docker Image CI/CD to Azure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]  

jobs:  
  build:  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Define IMAGE_TAG once for consistent tagging
    - name: Set IMAGE_TAG
      run: echo "IMAGE_TAG=my-image-name:$(date +%s)" >> $GITHUB_ENV

    # Build the Docker image
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:${{ env.IMAGE_TAG }}

    # Log in to Azure Container Registry (ACR)
    - name: Log in to Azure Container Registry
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

    # Tag and Push Docker image to ACR
    - name: Tag and Push Docker Image
      run: |
        docker tag my-image-name:${{ env.IMAGE_TAG }} ${{ secrets.ACR_LOGIN_SERVER }}/my-image-name:${{ env.IMAGE_TAG }}
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/my-image-name:${{ env.IMAGE_TAG }}

    # Deploy Docker image to Azure Container App
    - name: Deploy to Azure Container App
      run: |
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

        # If the container app already exists, use `update`, otherwise use `create`
        az containerapp update \
          --name ${{ secrets.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --image ${{ secrets.ACR_LOGIN_SERVER }}/my-image-name:${{ env.IMAGE_TAG }} \
          --registry-server ${{ secrets.ACR_LOGIN_SERVER }} \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} || \

        az containerapp create \
          --name ${{ secrets.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --environment ${{ secrets.AZURE_CONTAINER_ENV_NAME }} \
          --image ${{ secrets.ACR_LOGIN_SERVER }}/my-image-name:${{ env.IMAGE_TAG }} \
          --registry-server ${{ secrets.ACR_LOGIN_SERVER }} \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --target-port 80 \
          --ingress 'external'
